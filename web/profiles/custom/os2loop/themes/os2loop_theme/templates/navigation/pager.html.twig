{#
/**
 * @file
 * Default theme implementation to display a pager.
 *
 * Available variables:
 * - heading_id: Pagination heading ID.
 * - items: List of pager items.
 *   The list is keyed by the following elements:
 *   - first: Item for the first page; not present on the first page of results.
 *   - previous: Item for the previous page; not present on the first page
 *     of results.
 *   - next: Item for the next page; not present on the last page of results.
 *   - last: Item for the last page; not present on the last page of results.
 *   - pages: List of pages, keyed by page number.
 *   Sub-sub elements:
 *   items.first, items.previous, items.next, items.last, and each item inside
 *   items.pages contain the following elements:
 *   - href: URL with appropriate query parameters for the item.
 *   - attributes: A keyed list of HTML attributes for the item.
 *   - text: The visible text used for the item link, such as "‹ Previous"
 *     or "Next ›".
 * - current: The page number of the current page.
 * - ellipses: If there are more pages than the quantity allows, then an
 *   ellipsis before or after the listed pages may be present.
 *   - previous: Present if the currently visible list of pages does not start
 *     at the first page.
 *   - next: Present if the visible list of pages ends before the last page.
 *
 * @see template_preprocess_pager()
 *
 * @ingroup themeable
 */
#}
{% if items %}
  <nav class="pager" role="navigation" aria-labelledby="{{ heading_id }}">
    <h4 id="{{ heading_id }}" class="visually-hidden">{{ 'Pagination'|t }}</h4>
    <ul class="pager__items js-pager__items pagination">
      {# Print previous item symbol. Disabled if we are on the first page. #}
      <li class="pager__item pager__item--previous page-item{{ items.previous ? '' : ' disabled' }}">
        <a href="{{ items.previous.href }}" title="{{ 'Go to previous page'|t }}" rel="prev" class="page-link"}>
          <span class="visually-hidden">{{ 'Previous page'|t }}</span>
          {% if items.previous.text|default('<') == '<' %}
            <span aria-hidden="true" class="bi bi-chevron-left"></span>
          {% else %}
            <span aria-hidden="true">{{- items.previous.text -}}</span>
          {% endif %}
        </a>
      </li>
      {# Add an ellipsis if there are further previous pages. #}
      {% if ellipses.previous %}
        <li class="pager__item pager__item--ellipsis page-item" role="presentation"><span class="page-link">&hellip;</span></li>
      {% endif %}
      {# Now generate the actual pager piece. #}
      {% for key, item in items.pages %}
        <li class="page-item pager__item{{ current == key ? ' active' : '' }}">
          {% if current == key %}
            {% set title = 'Current page'|t %}
          {% else %}
            {% set title = 'Go to page @key'|t({'@key': key}) %}
          {% endif %}
          <a href="{{ item.href }}" title="{{ title }}"{{ item.attributes|without('href', 'title').addClass('page-link') }}>
            <span class="visually-hidden">
              {{ current == key ? 'Current page'|t : 'Page'|t }}
            </span>
            {{- key -}}
          </a>
        </li>
      {% endfor %}
      {# Add an ellipsis if there are further next pages. #}
      {% if ellipses.next %}
        <li class="page-item pager__item pager__item--ellipsis page-item" role="presentation"><span class="page-link">&hellip;</span></li>
      {% endif %}
      {# Print next item symbol. Disabled if we are on the last page. #}
      <li class="page-item pager__item pager__item--next{{ items.next ? '' : ' disabled' }}">
        <a href="{{ items.next.href }}" title="{{ 'Go to next page'|t }}" rel="next" class="page-link">
          <span class="visually-hidden">{{ 'Next page'|t }}</span>
          {% if items.next.text|default('>') == '>' %}
            <span aria-hidden="true" class="bi bi-chevron-right"></span>
          {% else %}
            <span aria-hidden="true">{{- items.next.text -}}</span>
          {% endif %}
        </a>
      </li>
    </ul>
  </nav>
{% endif %}
